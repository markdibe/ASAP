{"version":3,"file":"local-date-value-accessor.d.ts","sources":["local-date-value-accessor.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const LOCAL_DATE_VALUE_ACCESSOR: any;\n/**\n * The accessor for writing a value and listening to changes on a date input element\n *\n *  ### Example\n *  `<input type=\"date\" name=\"myBirthday\" ngModel useValueAsLocalDate>`\n */\nexport declare class LocalDateValueAccessor implements ControlValueAccessor {\n    private renderer;\n    private elementRef;\n    onChange: any;\n    onInput: (date: Date) => void;\n    onTouched: () => void;\n    constructor(renderer: Renderer2, elementRef: ElementRef);\n    writeValue(date: Date): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n}\n"]}